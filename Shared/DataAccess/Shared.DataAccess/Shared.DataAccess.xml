<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Shared.DataAccess</name>
    </assembly>
    <members>
        <member name="T:AspNetCoreMvcRecipes.Shared.DataAccess.ArtistRepository">
            <summary>
            Repository that simplifies accessing and modifying artist information
            </summary>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.ArtistRepository.#ctor(AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext)">
            <summary>
            Constructor allows Db Context to be injected
            </summary>
            <param name="context">Mob DB Context</param>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.ArtistRepository.GetNewArtists(System.Int32)">
            <summary>
            Gets a list of artists
            </summary>
            <param name="page">Allows you to move between pages</param>
            <returns>List of artists</returns>
        </member>
        <member name="T:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext">
            <summary>
            Database Context
            </summary>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext})">
            <summary>
            Constructor accepts DbContextOptions which is passed to base constructor
            Use this constructor  with your ASP.NET Core application
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.#ctor(System.String)">
            <summary>
            Constructor allows connection string to be injected
            </summary>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.#ctor">
            <summary>
            Default constructor can be used with Unit Tests
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.Alerts">
            <summary>
            Tracks alerts generated by the system
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.AlertSubscriptions">
            <summary>
            Contains data regarding members subscriptions to alerts
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.AlertTags">
            <summary>
            Creates relationship between alerts and tags allowing functionality such as member subscribing to tag
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.Artists">
            <summary>
            Contain information regarding web site users who participate in music collaborations
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.ArtistBands">
            <summary>
            Shows relationship between artist and band
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.ArtistBlocks">
            <summary>
            Used to allow artist to block other artists from contacting them
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.ArtistCollaborationSpaces">
            <summary>
            Shows relationship between an artist and 
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.ArtistFavorites">
            <summary>
            Stores favorite songs, collaboration spaces, and artists for a user
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.ArtistProfiles">
            <summary>
            Defines layout of artist profile page
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.ArtistSkills">
            <summary>
            Tracks skills and level of proficiency in that skill
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.Bands">
            <summary>
            List of bands. 
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.BandAuditions">
            <summary>
            Tracks band audition work flow
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.BandAuditionComments">
            <summary>
            Comments posted by band members regarding an audition
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.BandGenres">
            <summary>
            The genre a bands is associated with
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.BannedEmailAddresses">
            <summary>
            Email addresses that are banned from registering on the site
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.CollaborationSpaces">
            <summary>
            Collaboration Spaces that can be used for groups of artists to work on songs
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.CollaborationSpaceAlerts">
            <summary>
            Alerts from actions taken on a collaboration space
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.CollaborationSpaceComments">
            <summary>
            Comments posted in a collaboration space
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.CollaborationSpaceFiles">
            <summary>
            Files posted to a collaboration space
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.CollaborationSpaceGenres">
            <summary>
            The type of music that will be created in the collaboration space
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.CollaborationSpaceInvites">
            <summary>
            Tracks invitations to a collaboration space
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.CollaborationSpaceMedias">
            <summary>
            Shows relationship between Media and collaboration spaces
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.EmailOptOuts">
            <summary>
            Allows people to opt-out of emails from the web site
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.EmailVerifications">
            <summary>
            Tracks email verification work flow for new registrations
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.GenreLookUps">
            <summary>
            Lookup list for Genre
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.Media">
            <summary>
            Meta-data about files uploaded to the site
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.Messages">
            <summary>
            Personal message between members
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.MessageRecipients">
            <summary>
            Site members who message will be sent to
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.MessageSpams">
            <summary>
            Personal messages marked as Spam
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.OpenPositions">
            <summary>
            Stores job opening for bands and collaboration spaces
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.PlayLists">
            <summary>
            A play list of songs 
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.PlaylistItems">
            <summary>
            Describes songs in a play list
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.Songs">
            <summary>
            Contains meta-data for songs uploaded to the site or published from completed collaborations
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.SongComments">
            <summary>
            Contains comments about songs posted by fans
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.Tasks">
            <summary>
            Contains work items assigned to user from work flows such as the band approval work flow
            </summary>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Code that runs when model is created. Used to add meta-data 
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
            Allows configuration information to be passed to DB Context.
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:AspNetCoreMvcRecipes.Shared.DataAccess.IUnitOfWork">
            <summary>
            Exposes several repositories and a save method
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.IUnitOfWork.ArtistRepository">
            <summary>
            Allows queries and data management for data regarding Artists
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.IUnitOfWork.CollaborationSpaceRepository">
            <summary>
            Allows queries and data management for data regarding Collaboration Spaces
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.IUnitOfWork.BandRepository">
            <summary>
            Allows queries and data management for data regarding Bands
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.IUnitOfWork.GenreLookUpRepository">
            <summary>
            Lookup lists for styles of music
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.IUnitOfWork.ArtistSkillRepository">
            <summary>
            Allows queries and data management for data regarding Artist Skills
            </summary>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.IUnitOfWork.Save">
            <summary>
            Saves data when state of objects has been changed
            </summary>
        </member>
        <member name="T:AspNetCoreMvcRecipes.Shared.DataAccess.Repository`1">
            <summary>
            The Generic Repository class exposes a set of methods that allow 
            create, read, update, and delete (CRUD) operations to be performed for any of the entities in our model. 
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.Repository`1.#ctor(AspNetCoreMvcRecipes.Shared.DataAccess.MoBContext)">
            <summary>
            Constructor for repository
            </summary>
            <param name="context">DB Context</param>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.Repository`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Allows you to query an entity
            </summary>
            <param name="filter">Lambda expression for filtering rows</param>
            <param name="orderBy">Lambda expression for sorting</param>
            <param name="includedProperties">Add an argument for each property that should be eager loaded</param>
            <param name="page">When pageSize is greater then 0 then will return a particular data page</param>
            <param name="pageSize">Number of items per page. 0 will return all data without pages</param>
            <returns>An IEnumerable of the type or null if no data is found</returns>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.Repository`1.GetEntityByKey(System.Object)">
            <summary>
            Gets the first entity an object as key
            </summary>
            <param name="key">The key of the object you are looking for</param>
            <returns>An instance of the entity or null</returns>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.Repository`1.Insert(`0)">
            <summary>
            Insert a new entity
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.Repository`1.Update(`0)">
            <summary>
            Update entity
            </summary>
            <param name="entityToUpdate"></param>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.Repository`1.Delete(`0)">
            <summary>
            Delete the entity
            </summary>
            <param name="entityToDelete"></param>
        </member>
        <member name="T:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork">
            <summary>
            Provides Unit of work pattern for data access and exposes set of repository classes
            </summary>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork.#ctor(System.String)">
            <summary>
            Allows connection string to be passed
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork.ArtistSkillRepository">
            <summary>
            Allows queries and data management for data regarding Artist Skills
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork.GenreLookUpRepository">
            <summary>
            Allows queries and data management for data regarding Genres
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork.ArtistRepository">
            <summary>
            Allows queries and data management for data regarding Artists
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork.CollaborationSpaceRepository">
            <summary>
            Allows queries and data management for data regarding Collaboration Spaces
            </summary>
        </member>
        <member name="P:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork.BandRepository">
            <summary>
            Allows queries and data management for data regarding Bands
            </summary>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork.Save">
            <summary>
            Saves changes made to any of the data to the data store
            </summary>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork.Dispose(System.Boolean)">
            <summary>
            Allows the object to be disposed by the garbage collector
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:AspNetCoreMvcRecipes.Shared.DataAccess.UnitOfWork.Dispose">
            <summary>
            Allows the object to be disposed by the garbage collector
            </summary>
        </member>
        <member name="T:AspNetCoreMvcRecipes.Shared.DataAccess.Util.DebugDataSubstitute">
            <summary>
            Helpers that can be used to aid in local testing where entire media base is not available on the local machine
            </summary>
        </member>
    </members>
</doc>
